#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Projet_ASP
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="GestiondeLivraison")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Définitions de méthodes d'extensibilité
    partial void OnCreated();
    partial void Insertcommande(commande instance);
    partial void Updatecommande(commande instance);
    partial void Deletecommande(commande instance);
    partial void InsertFacture(Facture instance);
    partial void UpdateFacture(Facture instance);
    partial void DeleteFacture(Facture instance);
    partial void InsertLivreur(Livreur instance);
    partial void UpdateLivreur(Livreur instance);
    partial void DeleteLivreur(Livreur instance);
    partial void Insertutilisateur(utilisateur instance);
    partial void Updateutilisateur(utilisateur instance);
    partial void Deleteutilisateur(utilisateur instance);
    partial void InsertVendeur(Vendeur instance);
    partial void UpdateVendeur(Vendeur instance);
    partial void DeleteVendeur(Vendeur instance);
    partial void InsertVille(Ville instance);
    partial void UpdateVille(Ville instance);
    partial void DeleteVille(Ville instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["GestiondeLivraisonConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<commande> commande
		{
			get
			{
				return this.GetTable<commande>();
			}
		}
		
		public System.Data.Linq.Table<Facture> Facture
		{
			get
			{
				return this.GetTable<Facture>();
			}
		}
		
		public System.Data.Linq.Table<Livreur> Livreur
		{
			get
			{
				return this.GetTable<Livreur>();
			}
		}
		
		public System.Data.Linq.Table<utilisateur> utilisateur
		{
			get
			{
				return this.GetTable<utilisateur>();
			}
		}
		
		public System.Data.Linq.Table<Vendeur> Vendeur
		{
			get
			{
				return this.GetTable<Vendeur>();
			}
		}
		
		public System.Data.Linq.Table<Ville> Ville
		{
			get
			{
				return this.GetTable<Ville>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.commande")]
	public partial class commande : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _code;
		
		private string _Client;
		
		private System.Nullable<int> _Telephone;
		
		private string _Adresse;
		
		private string _NomProduit;
		
		private string _Vendeur;
		
		private System.Nullable<int> _Prix;
		
		private System.Nullable<System.DateTime> _DateLivraison;
		
		private string _Etat;
		
		private System.Nullable<System.DateTime> _dateDepot;
		
		private string _note;
		
		private System.Nullable<int> _idFacture;
		
		private System.Nullable<int> _idVendeur;
		
		private string _ville;
		
		private EntityRef<Facture> _Facture;
		
		private EntityRef<Vendeur> _Vendeur1;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OnClientChanging(string value);
    partial void OnClientChanged();
    partial void OnTelephoneChanging(System.Nullable<int> value);
    partial void OnTelephoneChanged();
    partial void OnAdresseChanging(string value);
    partial void OnAdresseChanged();
    partial void OnNomProduitChanging(string value);
    partial void OnNomProduitChanged();
    partial void OnVendeurChanging(string value);
    partial void OnVendeurChanged();
    partial void OnPrixChanging(System.Nullable<int> value);
    partial void OnPrixChanged();
    partial void OnDateLivraisonChanging(System.Nullable<System.DateTime> value);
    partial void OnDateLivraisonChanged();
    partial void OnEtatChanging(string value);
    partial void OnEtatChanged();
    partial void OndateDepotChanging(System.Nullable<System.DateTime> value);
    partial void OndateDepotChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    partial void OnidFactureChanging(System.Nullable<int> value);
    partial void OnidFactureChanged();
    partial void OnidVendeurChanging(System.Nullable<int> value);
    partial void OnidVendeurChanged();
    partial void OnvilleChanging(string value);
    partial void OnvilleChanged();
    #endregion
		
		public commande()
		{
			this._Facture = default(EntityRef<Facture>);
			this._Vendeur1 = default(EntityRef<Vendeur>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(50)")]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Client", DbType="VarChar(50)")]
		public string Client
		{
			get
			{
				return this._Client;
			}
			set
			{
				if ((this._Client != value))
				{
					this.OnClientChanging(value);
					this.SendPropertyChanging();
					this._Client = value;
					this.SendPropertyChanged("Client");
					this.OnClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="Int")]
		public System.Nullable<int> Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adresse", DbType="VarChar(50)")]
		public string Adresse
		{
			get
			{
				return this._Adresse;
			}
			set
			{
				if ((this._Adresse != value))
				{
					this.OnAdresseChanging(value);
					this.SendPropertyChanging();
					this._Adresse = value;
					this.SendPropertyChanged("Adresse");
					this.OnAdresseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomProduit", DbType="VarChar(50)")]
		public string NomProduit
		{
			get
			{
				return this._NomProduit;
			}
			set
			{
				if ((this._NomProduit != value))
				{
					this.OnNomProduitChanging(value);
					this.SendPropertyChanging();
					this._NomProduit = value;
					this.SendPropertyChanged("NomProduit");
					this.OnNomProduitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vendeur", DbType="VarChar(50)")]
		public string Vendeur
		{
			get
			{
				return this._Vendeur;
			}
			set
			{
				if ((this._Vendeur != value))
				{
					this.OnVendeurChanging(value);
					this.SendPropertyChanging();
					this._Vendeur = value;
					this.SendPropertyChanged("Vendeur");
					this.OnVendeurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prix", DbType="Int")]
		public System.Nullable<int> Prix
		{
			get
			{
				return this._Prix;
			}
			set
			{
				if ((this._Prix != value))
				{
					this.OnPrixChanging(value);
					this.SendPropertyChanging();
					this._Prix = value;
					this.SendPropertyChanged("Prix");
					this.OnPrixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLivraison", DbType="Date")]
		public System.Nullable<System.DateTime> DateLivraison
		{
			get
			{
				return this._DateLivraison;
			}
			set
			{
				if ((this._DateLivraison != value))
				{
					this.OnDateLivraisonChanging(value);
					this.SendPropertyChanging();
					this._DateLivraison = value;
					this.SendPropertyChanged("DateLivraison");
					this.OnDateLivraisonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Etat", DbType="VarChar(80)")]
		public string Etat
		{
			get
			{
				return this._Etat;
			}
			set
			{
				if ((this._Etat != value))
				{
					this.OnEtatChanging(value);
					this.SendPropertyChanging();
					this._Etat = value;
					this.SendPropertyChanged("Etat");
					this.OnEtatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateDepot", DbType="Date")]
		public System.Nullable<System.DateTime> dateDepot
		{
			get
			{
				return this._dateDepot;
			}
			set
			{
				if ((this._dateDepot != value))
				{
					this.OndateDepotChanging(value);
					this.SendPropertyChanging();
					this._dateDepot = value;
					this.SendPropertyChanged("dateDepot");
					this.OndateDepotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_note", DbType="VarChar(100)")]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this.OnnoteChanging(value);
					this.SendPropertyChanging();
					this._note = value;
					this.SendPropertyChanged("note");
					this.OnnoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFacture", DbType="Int")]
		public System.Nullable<int> idFacture
		{
			get
			{
				return this._idFacture;
			}
			set
			{
				if ((this._idFacture != value))
				{
					if (this._Facture.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidFactureChanging(value);
					this.SendPropertyChanging();
					this._idFacture = value;
					this.SendPropertyChanged("idFacture");
					this.OnidFactureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idVendeur", DbType="Int")]
		public System.Nullable<int> idVendeur
		{
			get
			{
				return this._idVendeur;
			}
			set
			{
				if ((this._idVendeur != value))
				{
					if (this._Vendeur1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidVendeurChanging(value);
					this.SendPropertyChanging();
					this._idVendeur = value;
					this.SendPropertyChanged("idVendeur");
					this.OnidVendeurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ville", DbType="VarChar(1)")]
		public string ville
		{
			get
			{
				return this._ville;
			}
			set
			{
				if ((this._ville != value))
				{
					this.OnvilleChanging(value);
					this.SendPropertyChanging();
					this._ville = value;
					this.SendPropertyChanged("ville");
					this.OnvilleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Facture_commande", Storage="_Facture", ThisKey="idFacture", OtherKey="idFacture", IsForeignKey=true)]
		public Facture Facture
		{
			get
			{
				return this._Facture.Entity;
			}
			set
			{
				Facture previousValue = this._Facture.Entity;
				if (((previousValue != value) 
							|| (this._Facture.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Facture.Entity = null;
						previousValue.commande.Remove(this);
					}
					this._Facture.Entity = value;
					if ((value != null))
					{
						value.commande.Add(this);
						this._idFacture = value.idFacture;
					}
					else
					{
						this._idFacture = default(Nullable<int>);
					}
					this.SendPropertyChanged("Facture");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendeur_commande", Storage="_Vendeur1", ThisKey="idVendeur", OtherKey="idVendeur", IsForeignKey=true)]
		public Vendeur Vendeur1
		{
			get
			{
				return this._Vendeur1.Entity;
			}
			set
			{
				Vendeur previousValue = this._Vendeur1.Entity;
				if (((previousValue != value) 
							|| (this._Vendeur1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vendeur1.Entity = null;
						previousValue.commande.Remove(this);
					}
					this._Vendeur1.Entity = value;
					if ((value != null))
					{
						value.commande.Add(this);
						this._idVendeur = value.idVendeur;
					}
					else
					{
						this._idVendeur = default(Nullable<int>);
					}
					this.SendPropertyChanged("Vendeur1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Facture")]
	public partial class Facture : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idFacture;
		
		private string _code;
		
		private System.Nullable<System.DateTime> _dateCreation;
		
		private string _Etat;
		
		private EntitySet<commande> _commande;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidFactureChanging(int value);
    partial void OnidFactureChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OndateCreationChanging(System.Nullable<System.DateTime> value);
    partial void OndateCreationChanged();
    partial void OnEtatChanging(string value);
    partial void OnEtatChanged();
    #endregion
		
		public Facture()
		{
			this._commande = new EntitySet<commande>(new Action<commande>(this.attach_commande), new Action<commande>(this.detach_commande));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFacture", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idFacture
		{
			get
			{
				return this._idFacture;
			}
			set
			{
				if ((this._idFacture != value))
				{
					this.OnidFactureChanging(value);
					this.SendPropertyChanging();
					this._idFacture = value;
					this.SendPropertyChanged("idFacture");
					this.OnidFactureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(50)")]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateCreation", DbType="Date")]
		public System.Nullable<System.DateTime> dateCreation
		{
			get
			{
				return this._dateCreation;
			}
			set
			{
				if ((this._dateCreation != value))
				{
					this.OndateCreationChanging(value);
					this.SendPropertyChanging();
					this._dateCreation = value;
					this.SendPropertyChanged("dateCreation");
					this.OndateCreationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Etat", DbType="VarChar(50)")]
		public string Etat
		{
			get
			{
				return this._Etat;
			}
			set
			{
				if ((this._Etat != value))
				{
					this.OnEtatChanging(value);
					this.SendPropertyChanging();
					this._Etat = value;
					this.SendPropertyChanged("Etat");
					this.OnEtatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Facture_commande", Storage="_commande", ThisKey="idFacture", OtherKey="idFacture")]
		public EntitySet<commande> commande
		{
			get
			{
				return this._commande;
			}
			set
			{
				this._commande.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_commande(commande entity)
		{
			this.SendPropertyChanging();
			entity.Facture = this;
		}
		
		private void detach_commande(commande entity)
		{
			this.SendPropertyChanging();
			entity.Facture = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Livreur")]
	public partial class Livreur : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idLivreur;
		
		private string _nom;
		
		private System.Nullable<int> _telephone;
		
		private string _adresse;
		
		private string _CIN;
		
		private System.Nullable<int> _idville;
		
		private string _LoginL;
		
		private string _PassL;
		
		private string _Email;
		
		private EntityRef<Ville> _Ville;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidLivreurChanging(int value);
    partial void OnidLivreurChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OntelephoneChanging(System.Nullable<int> value);
    partial void OntelephoneChanged();
    partial void OnadresseChanging(string value);
    partial void OnadresseChanged();
    partial void OnCINChanging(string value);
    partial void OnCINChanged();
    partial void OnidvilleChanging(System.Nullable<int> value);
    partial void OnidvilleChanged();
    partial void OnLoginLChanging(string value);
    partial void OnLoginLChanged();
    partial void OnPassLChanging(string value);
    partial void OnPassLChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public Livreur()
		{
			this._Ville = default(EntityRef<Ville>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idLivreur", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idLivreur
		{
			get
			{
				return this._idLivreur;
			}
			set
			{
				if ((this._idLivreur != value))
				{
					this.OnidLivreurChanging(value);
					this.SendPropertyChanging();
					this._idLivreur = value;
					this.SendPropertyChanged("idLivreur");
					this.OnidLivreurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="VarChar(50)")]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telephone", DbType="Int")]
		public System.Nullable<int> telephone
		{
			get
			{
				return this._telephone;
			}
			set
			{
				if ((this._telephone != value))
				{
					this.OntelephoneChanging(value);
					this.SendPropertyChanging();
					this._telephone = value;
					this.SendPropertyChanged("telephone");
					this.OntelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adresse", DbType="VarChar(50)")]
		public string adresse
		{
			get
			{
				return this._adresse;
			}
			set
			{
				if ((this._adresse != value))
				{
					this.OnadresseChanging(value);
					this.SendPropertyChanging();
					this._adresse = value;
					this.SendPropertyChanged("adresse");
					this.OnadresseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CIN", DbType="VarChar(50)")]
		public string CIN
		{
			get
			{
				return this._CIN;
			}
			set
			{
				if ((this._CIN != value))
				{
					this.OnCINChanging(value);
					this.SendPropertyChanging();
					this._CIN = value;
					this.SendPropertyChanged("CIN");
					this.OnCINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idville", DbType="Int")]
		public System.Nullable<int> idville
		{
			get
			{
				return this._idville;
			}
			set
			{
				if ((this._idville != value))
				{
					if (this._Ville.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidvilleChanging(value);
					this.SendPropertyChanging();
					this._idville = value;
					this.SendPropertyChanged("idville");
					this.OnidvilleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginL", DbType="VarChar(50)")]
		public string LoginL
		{
			get
			{
				return this._LoginL;
			}
			set
			{
				if ((this._LoginL != value))
				{
					this.OnLoginLChanging(value);
					this.SendPropertyChanging();
					this._LoginL = value;
					this.SendPropertyChanged("LoginL");
					this.OnLoginLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassL", DbType="VarChar(50)")]
		public string PassL
		{
			get
			{
				return this._PassL;
			}
			set
			{
				if ((this._PassL != value))
				{
					this.OnPassLChanging(value);
					this.SendPropertyChanging();
					this._PassL = value;
					this.SendPropertyChanged("PassL");
					this.OnPassLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ville_Livreur", Storage="_Ville", ThisKey="idville", OtherKey="idville", IsForeignKey=true)]
		public Ville Ville
		{
			get
			{
				return this._Ville.Entity;
			}
			set
			{
				Ville previousValue = this._Ville.Entity;
				if (((previousValue != value) 
							|| (this._Ville.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ville.Entity = null;
						previousValue.Livreur.Remove(this);
					}
					this._Ville.Entity = value;
					if ((value != null))
					{
						value.Livreur.Add(this);
						this._idville = value.idville;
					}
					else
					{
						this._idville = default(Nullable<int>);
					}
					this.SendPropertyChanged("Ville");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.utilisateur")]
	public partial class utilisateur : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idUtilisateur;
		
		private string _lgn;
		
		private string _code;
		
		private string _Nom;
		
		private System.Nullable<int> _Telephone;
		
		private string _Adresse;
		
		private string _Email;
		
		private string _CIN;
		
		private System.Nullable<int> _idville;
		
		private string _TypeUser;
		
		private EntityRef<Ville> _Ville;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidUtilisateurChanging(int value);
    partial void OnidUtilisateurChanged();
    partial void OnlgnChanging(string value);
    partial void OnlgnChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OnNomChanging(string value);
    partial void OnNomChanged();
    partial void OnTelephoneChanging(System.Nullable<int> value);
    partial void OnTelephoneChanged();
    partial void OnAdresseChanging(string value);
    partial void OnAdresseChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCINChanging(string value);
    partial void OnCINChanged();
    partial void OnidvilleChanging(System.Nullable<int> value);
    partial void OnidvilleChanged();
    partial void OnTypeUserChanging(string value);
    partial void OnTypeUserChanged();
    #endregion
		
		public utilisateur()
		{
			this._Ville = default(EntityRef<Ville>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUtilisateur", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idUtilisateur
		{
			get
			{
				return this._idUtilisateur;
			}
			set
			{
				if ((this._idUtilisateur != value))
				{
					this.OnidUtilisateurChanging(value);
					this.SendPropertyChanging();
					this._idUtilisateur = value;
					this.SendPropertyChanged("idUtilisateur");
					this.OnidUtilisateurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lgn", DbType="VarChar(50)")]
		public string lgn
		{
			get
			{
				return this._lgn;
			}
			set
			{
				if ((this._lgn != value))
				{
					this.OnlgnChanging(value);
					this.SendPropertyChanging();
					this._lgn = value;
					this.SendPropertyChanged("lgn");
					this.OnlgnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(50)")]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nom", DbType="VarChar(50)")]
		public string Nom
		{
			get
			{
				return this._Nom;
			}
			set
			{
				if ((this._Nom != value))
				{
					this.OnNomChanging(value);
					this.SendPropertyChanging();
					this._Nom = value;
					this.SendPropertyChanged("Nom");
					this.OnNomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="Int")]
		public System.Nullable<int> Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adresse", DbType="VarChar(50)")]
		public string Adresse
		{
			get
			{
				return this._Adresse;
			}
			set
			{
				if ((this._Adresse != value))
				{
					this.OnAdresseChanging(value);
					this.SendPropertyChanging();
					this._Adresse = value;
					this.SendPropertyChanged("Adresse");
					this.OnAdresseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CIN", DbType="VarChar(50)")]
		public string CIN
		{
			get
			{
				return this._CIN;
			}
			set
			{
				if ((this._CIN != value))
				{
					this.OnCINChanging(value);
					this.SendPropertyChanging();
					this._CIN = value;
					this.SendPropertyChanged("CIN");
					this.OnCINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idville", DbType="Int")]
		public System.Nullable<int> idville
		{
			get
			{
				return this._idville;
			}
			set
			{
				if ((this._idville != value))
				{
					if (this._Ville.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidvilleChanging(value);
					this.SendPropertyChanging();
					this._idville = value;
					this.SendPropertyChanged("idville");
					this.OnidvilleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeUser", DbType="VarChar(50)")]
		public string TypeUser
		{
			get
			{
				return this._TypeUser;
			}
			set
			{
				if ((this._TypeUser != value))
				{
					this.OnTypeUserChanging(value);
					this.SendPropertyChanging();
					this._TypeUser = value;
					this.SendPropertyChanged("TypeUser");
					this.OnTypeUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ville_utilisateur", Storage="_Ville", ThisKey="idville", OtherKey="idville", IsForeignKey=true)]
		public Ville Ville
		{
			get
			{
				return this._Ville.Entity;
			}
			set
			{
				Ville previousValue = this._Ville.Entity;
				if (((previousValue != value) 
							|| (this._Ville.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ville.Entity = null;
						previousValue.utilisateur.Remove(this);
					}
					this._Ville.Entity = value;
					if ((value != null))
					{
						value.utilisateur.Add(this);
						this._idville = value.idville;
					}
					else
					{
						this._idville = default(Nullable<int>);
					}
					this.SendPropertyChanged("Ville");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vendeur")]
	public partial class Vendeur : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idVendeur;
		
		private string _nom;
		
		private string _Adresse;
		
		private string _TypeVendeur;
		
		private string _LoginV;
		
		private string _PassV;
		
		private EntitySet<commande> _commande;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidVendeurChanging(int value);
    partial void OnidVendeurChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OnAdresseChanging(string value);
    partial void OnAdresseChanged();
    partial void OnTypeVendeurChanging(string value);
    partial void OnTypeVendeurChanged();
    partial void OnLoginVChanging(string value);
    partial void OnLoginVChanged();
    partial void OnPassVChanging(string value);
    partial void OnPassVChanged();
    #endregion
		
		public Vendeur()
		{
			this._commande = new EntitySet<commande>(new Action<commande>(this.attach_commande), new Action<commande>(this.detach_commande));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idVendeur", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idVendeur
		{
			get
			{
				return this._idVendeur;
			}
			set
			{
				if ((this._idVendeur != value))
				{
					this.OnidVendeurChanging(value);
					this.SendPropertyChanging();
					this._idVendeur = value;
					this.SendPropertyChanged("idVendeur");
					this.OnidVendeurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="VarChar(50)")]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adresse", DbType="VarChar(50)")]
		public string Adresse
		{
			get
			{
				return this._Adresse;
			}
			set
			{
				if ((this._Adresse != value))
				{
					this.OnAdresseChanging(value);
					this.SendPropertyChanging();
					this._Adresse = value;
					this.SendPropertyChanged("Adresse");
					this.OnAdresseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeVendeur", DbType="VarChar(50)")]
		public string TypeVendeur
		{
			get
			{
				return this._TypeVendeur;
			}
			set
			{
				if ((this._TypeVendeur != value))
				{
					this.OnTypeVendeurChanging(value);
					this.SendPropertyChanging();
					this._TypeVendeur = value;
					this.SendPropertyChanged("TypeVendeur");
					this.OnTypeVendeurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginV", DbType="VarChar(50)")]
		public string LoginV
		{
			get
			{
				return this._LoginV;
			}
			set
			{
				if ((this._LoginV != value))
				{
					this.OnLoginVChanging(value);
					this.SendPropertyChanging();
					this._LoginV = value;
					this.SendPropertyChanged("LoginV");
					this.OnLoginVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassV", DbType="VarChar(50)")]
		public string PassV
		{
			get
			{
				return this._PassV;
			}
			set
			{
				if ((this._PassV != value))
				{
					this.OnPassVChanging(value);
					this.SendPropertyChanging();
					this._PassV = value;
					this.SendPropertyChanged("PassV");
					this.OnPassVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendeur_commande", Storage="_commande", ThisKey="idVendeur", OtherKey="idVendeur")]
		public EntitySet<commande> commande
		{
			get
			{
				return this._commande;
			}
			set
			{
				this._commande.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_commande(commande entity)
		{
			this.SendPropertyChanging();
			entity.Vendeur1 = this;
		}
		
		private void detach_commande(commande entity)
		{
			this.SendPropertyChanging();
			entity.Vendeur1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ville")]
	public partial class Ville : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idville;
		
		private string _label;
		
		private EntitySet<Livreur> _Livreur;
		
		private EntitySet<utilisateur> _utilisateur;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidvilleChanging(int value);
    partial void OnidvilleChanged();
    partial void OnlabelChanging(string value);
    partial void OnlabelChanged();
    #endregion
		
		public Ville()
		{
			this._Livreur = new EntitySet<Livreur>(new Action<Livreur>(this.attach_Livreur), new Action<Livreur>(this.detach_Livreur));
			this._utilisateur = new EntitySet<utilisateur>(new Action<utilisateur>(this.attach_utilisateur), new Action<utilisateur>(this.detach_utilisateur));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idville", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idville
		{
			get
			{
				return this._idville;
			}
			set
			{
				if ((this._idville != value))
				{
					this.OnidvilleChanging(value);
					this.SendPropertyChanging();
					this._idville = value;
					this.SendPropertyChanged("idville");
					this.OnidvilleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_label", DbType="VarChar(50)")]
		public string label
		{
			get
			{
				return this._label;
			}
			set
			{
				if ((this._label != value))
				{
					this.OnlabelChanging(value);
					this.SendPropertyChanging();
					this._label = value;
					this.SendPropertyChanged("label");
					this.OnlabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ville_Livreur", Storage="_Livreur", ThisKey="idville", OtherKey="idville")]
		public EntitySet<Livreur> Livreur
		{
			get
			{
				return this._Livreur;
			}
			set
			{
				this._Livreur.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ville_utilisateur", Storage="_utilisateur", ThisKey="idville", OtherKey="idville")]
		public EntitySet<utilisateur> utilisateur
		{
			get
			{
				return this._utilisateur;
			}
			set
			{
				this._utilisateur.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Livreur(Livreur entity)
		{
			this.SendPropertyChanging();
			entity.Ville = this;
		}
		
		private void detach_Livreur(Livreur entity)
		{
			this.SendPropertyChanging();
			entity.Ville = null;
		}
		
		private void attach_utilisateur(utilisateur entity)
		{
			this.SendPropertyChanging();
			entity.Ville = this;
		}
		
		private void detach_utilisateur(utilisateur entity)
		{
			this.SendPropertyChanging();
			entity.Ville = null;
		}
	}
}
#pragma warning restore 1591
